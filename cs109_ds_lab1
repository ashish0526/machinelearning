{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled14.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ashish0526/machinelearning/blob/master/cs109_ds_lab1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6x95Bgnn5pzr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "%matplotlib inline \n",
        "\n",
        "import numpy as np # imports a fast numerical programming library\n",
        "import matplotlib.pyplot as plt #sets up plotting under plt\n",
        "import pandas as pd #lets us handle data as dataframes\n",
        "\n",
        "#sets up pandas table display\n",
        "pd.set_option('display.width', 500)\n",
        "pd.set_option('display.max_columns', 100)\n",
        "pd.set_option('display.notebook_repr_html', True)\n",
        "\n",
        "import seaborn as sns #sets up styles and gives us mo"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZpJ8G_my5s8i",
        "colab_type": "code",
        "outputId": "ad8d31b3-5c8b-4445-cdfd-94fe4ed767ca",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "np.mean([1,2,3,4,5])"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DS9FphF451g-",
        "colab_type": "code",
        "outputId": "a53d656b-71ee-4c08-b1ce-de5ac4677fb7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "float_list = [1.0,2.09,4.0,2.0,0.444]\n",
        "print(float_list)\n"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1.0, 2.09, 4.0, 2.0, 0.444]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aLzDHTWl6HFM",
        "colab_type": "code",
        "outputId": "37a4afb9-7a7f-4385-af69-bc94a717f97b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "float_list.append(56.7)\n",
        "print(float_list)"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1.0, 2.09, 4.0, 2.0, 0.444, 56.7]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Spd8s8ek6NIK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def square(x):\n",
        "  return x*x"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P4gOa83w6XIe",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def cube(x):\n",
        "  cube = x*x*x\n",
        "  return cube"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "88RCbXV66elj",
        "colab_type": "code",
        "outputId": "69371969-5016-4886-a293-22217491d1fd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "square(5),cube(5)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(25, 125)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lOJgxwks6iAx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def square_and_cube(x):\n",
        "  square = x*x\n",
        "  cube = square*x\n",
        "  return (square,cube)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "opVzaag36s3k",
        "colab_type": "code",
        "outputId": "8b6f18df-4510-4fc0-e482-de7d4a089c76",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "square_and_cube(4)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16, 64)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "39qQINZk6wVl",
        "colab_type": "code",
        "outputId": "aa85fac7-044c-4db3-ca46-59b4262972dd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "square = lambda x: x*x\n",
        "print(square(3))\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "9\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HE5jFwMW68lR",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "hypotunese = lambda x,y: x*x+y*y"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0b7ie2yQ7D4f",
        "colab_type": "code",
        "outputId": "0dd20141-b019-4617-f2f8-087ace390af3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(hypotunese(3,4))"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "25\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lpsyxXMj7Jt5",
        "colab_type": "code",
        "outputId": "70484214-4cf0-4dd7-d3ef-e42c9c1c3215",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "def isprime(N):\n",
        "  count=0\n",
        "  if not isinstance(N,int):\n",
        "    return False\n",
        "  if N<=1:\n",
        "    return False\n",
        "  \n",
        "  for i in range(2,N):\n",
        "    if N%i==0:\n",
        "      count+=1\n",
        "  \n",
        "  if count==0:\n",
        "    return (True)\n",
        "  else:\n",
        "    return False\n",
        "print(isprime(3.0), isprime(\"rahul\"), isprime(0), isprime(-1), isprime(1), isprime(2), isprime(93), isprime(97))  \n",
        "  \n",
        "    \n",
        "   "
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "False False False False False True False True\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DSGYvfXG76kN",
        "colab_type": "code",
        "outputId": "d94e5ad3-417e-4434-e055-b812b045c98f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "def get_multiple(x, y=1):\n",
        "    return x, y, x*y\n",
        "\n",
        "print(\"With x and y:\", get_multiple(10, 2))\n",
        "print(\"With x only:\", get_multiple(10))"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "With x and y: (10, 2, 20)\n",
            "With x only: (10, 1, 10)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lc2gG-VS8BzJ",
        "colab_type": "code",
        "outputId": "5ff5a22b-deaf-4228-d2a2-8563ebd7c973",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "my_array = np.array([1,2,3,4])\n",
        "my_array"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PbyciVbk8J6z",
        "colab_type": "code",
        "outputId": "ab5e9408-a369-4774-cbf6-0e040de1bf1c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(len(my_array))"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "4\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DDGaxw258OYY",
        "colab_type": "code",
        "outputId": "c363dfc5-2c35-4e37-c9c4-1c8d26e86ab4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(my_array[2:4])"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[3 4]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iK4oHvDo8Rnn",
        "colab_type": "code",
        "outputId": "81735735-1ad8-4e9d-fd68-ac964944e2fc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "for ele in my_array:\n",
        "  print(ele)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1\n",
            "2\n",
            "3\n",
            "4\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "afOtawJ78X4F",
        "colab_type": "code",
        "outputId": "002fbd1a-32b1-4905-cd1f-81db44648c46",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(my_array.mean())"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2.5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pccGmhnY8bYy",
        "colab_type": "code",
        "outputId": "264100fc-b845-434e-b1b8-8b1503818d88",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(np.mean(my_array))"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2.5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tyRWKHBS8e3W",
        "colab_type": "code",
        "outputId": "486436fd-0ea6-485c-ff9e-30e6796f5cd0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "np.ones(10)\n"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6vo09chC8jud",
        "colab_type": "code",
        "outputId": "56a911c8-ff21-4e77-bf46-e15a9d057cb0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "np.dtype(float).itemsize"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2QlfQAf_8saY",
        "colab_type": "code",
        "outputId": "c9b0aee3-846f-4d8e-f5f5-1a4b0f71e6d4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "np.zeros(10)"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZIYq2CF380gE",
        "colab_type": "code",
        "outputId": "d5cce1c4-632d-4427-f5cc-3e8a488af78c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "np.random.random(10)"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.06703987, 0.415155  , 0.46624414, 0.00260167, 0.16137096,\n",
              "       0.62072348, 0.0566825 , 0.45163485, 0.61040342, 0.22988525])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1mFdYqmg833W",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "normal_array = np.random.randn(100)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fITyXNRQ8-x9",
        "colab_type": "code",
        "outputId": "536d071f-67e7-4118-9126-908ece4e98d4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        }
      },
      "source": [
        "normal_array"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.56562303, -0.29277091,  0.18384835,  0.01500253, -2.24295722,\n",
              "       -0.2815983 ,  0.19537176,  1.10018548,  0.77730083,  0.30991902,\n",
              "       -0.29739725, -1.33036682,  0.67737521, -0.51060439, -0.14932496,\n",
              "       -0.62552938,  0.21575814, -0.36939153, -0.3805401 , -0.14201581,\n",
              "        1.23555634, -0.20401003, -0.04023483,  1.25612972,  0.08924603,\n",
              "        0.060026  , -1.71495036, -2.62579225,  0.55705239, -1.37964848,\n",
              "       -1.56955956,  1.05986748, -1.68530592, -1.44499867, -2.14645013,\n",
              "       -0.64081973, -0.53785356, -1.32480632,  1.38115447,  0.77174216,\n",
              "        1.446903  , -1.75796622, -1.61280351,  0.4790933 ,  1.21862206,\n",
              "       -0.73900074,  0.63204174, -0.3219359 , -0.99291161,  1.04955285,\n",
              "        0.47693053, -2.41937277, -1.6900082 , -1.10914585, -0.51527134,\n",
              "        1.99708731, -0.1778585 ,  0.33187988, -0.90592491, -0.90811071,\n",
              "        0.48526315,  0.10904755, -0.14500821,  0.92717669,  0.59201822,\n",
              "        0.76615658,  0.44060116, -1.12785505, -0.78636795,  1.11405487,\n",
              "       -1.43736841, -0.63601433,  1.88598075,  0.66178602, -0.05432224,\n",
              "       -1.26801866,  0.03293505,  0.05613002,  0.7595165 , -0.25053083,\n",
              "        0.69517206,  1.16685154,  0.52283135, -0.87180982,  1.73210146,\n",
              "        0.13209985,  0.7453255 ,  0.22101126,  0.4591658 ,  1.18887098,\n",
              "        2.0397787 , -1.74944031, -1.16662745, -0.51157131, -1.14104842,\n",
              "        0.69771382, -0.11977595, -1.74847229,  0.97020352, -1.172789  ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pwXnyuGP9AWp",
        "colab_type": "code",
        "outputId": "9ee572f1-3d53-47fb-9340-a62998dc0431",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(np.std(normal_array))"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1.0581597009269677\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YFN9Zmse9Ipe",
        "colab_type": "code",
        "outputId": "85821fe1-4d9e-493f-bb67-9630eccdc5e4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "first =np.ones(5)\n",
        "second = np.ones(5)\n",
        "first+second"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2., 2., 2., 2., 2.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OpuLIV6uBxad",
        "colab_type": "code",
        "outputId": "4670d68b-5648-47c9-ff75-e5ffe0d4d083",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "first_list = [1,1,1,1,1]\n",
        "second_list =[1,1,1,1,1]\n",
        "first_list+second_list"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ljjE868UB68D",
        "colab_type": "code",
        "outputId": "5ea18865-70e2-4bfd-95ac-4426b215f65f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "first+1"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2., 2., 2., 2., 2.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O4ukt_5TB9cr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "normal_5_7 = 5 + 7*normal_array"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3XboFyGdCHEs",
        "colab_type": "code",
        "outputId": "3a5e966f-db67-4c26-8345-83ff6af76479",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        }
      },
      "source": [
        "normal_5_7"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 15.95936123,   2.95060366,   6.28693842,   5.10501769,\n",
              "       -10.70070055,   3.02881188,   6.36760231,  12.70129839,\n",
              "        10.4411058 ,   7.16943316,   2.91821928,  -4.31256777,\n",
              "         9.74162647,   1.42576928,   3.95472528,   0.62129433,\n",
              "         6.51030699,   2.41425929,   2.33621931,   4.00588931,\n",
              "        13.64889436,   3.57192978,   4.71835617,  13.79290807,\n",
              "         5.62472218,   5.42018198,  -7.00465253, -13.38054574,\n",
              "         8.89936675,  -4.65753939,  -5.9869169 ,  12.41907237,\n",
              "        -6.79714145,  -5.11499071, -10.02515089,   0.51426189,\n",
              "         1.23502511,  -4.27364422,  14.66808127,  10.40219512,\n",
              "        15.12832098,  -7.30576354,  -6.28962455,   8.35365313,\n",
              "        13.53035445,  -0.17300515,   9.42429215,   2.74644869,\n",
              "        -1.95038129,  12.34686998,   8.33851368, -11.93560936,\n",
              "        -6.83005742,  -2.76402096,   1.3931006 ,  18.97961115,\n",
              "         3.75499052,   7.32315917,  -1.34147436,  -1.35677494,\n",
              "         8.39684205,   5.76333285,   3.98494251,  11.49023682,\n",
              "         9.14412756,  10.36309604,   8.08420813,  -2.89498535,\n",
              "        -0.50457566,  12.79838407,  -5.06157885,   0.54789966,\n",
              "        18.20186524,   9.63250216,   4.61974432,  -3.87613065,\n",
              "         5.23054536,   5.39291013,  10.31661547,   3.24628417,\n",
              "         9.86620445,  13.16796079,   8.65981942,  -1.10266871,\n",
              "        17.12471022,   5.92469896,  10.21727848,   6.54707884,\n",
              "         8.21416059,  13.32209688,  19.27845092,  -7.2460822 ,\n",
              "        -3.16639216,   1.41900085,  -2.98733897,   9.88399674,\n",
              "         4.16156833,  -7.23930603,  11.79142463,  -3.20952302])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bQeeabcQCI5j",
        "colab_type": "code",
        "outputId": "57e18781-eb33-4e4f-928c-9f2b45e542d4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "np.mean(normal_5_7)"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4.174756349482931"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gu9Etx1cCWsu",
        "colab_type": "code",
        "outputId": "f5292c7d-8b8b-48a0-fd3f-25ec4c24556f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "np.std(normal_5_7)"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7.407117906488774"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4aFUPXqoCWRa",
        "colab_type": "code",
        "outputId": "3e4831b4-bcf1-4a76-80d0-534e8421b64a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "my_array2d = np.array([ [1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12] ])\n",
        "\n",
        "# 3 x 4 array of ones\n",
        "ones_2d = np.ones([3, 4])\n",
        "print(ones_2d)"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[1. 1. 1. 1.]\n",
            " [1. 1. 1. 1.]\n",
            " [1. 1. 1. 1.]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VF7HZ_S7Cqdm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ones_noise = ones_2d + 0.01*np.random.rand(3,4)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_ShTZcgIDNpB",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "077b7550-9570-4329-ebbb-607072b48c34"
      },
      "source": [
        "ones_noise\n"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1.00209317, 1.00148591, 1.00004346, 1.00459888],\n",
              "       [1.00170843, 1.00838812, 1.00066477, 1.00445274],\n",
              "       [1.00240813, 1.00487604, 1.00164643, 1.005867  ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3bACgdpQDO7G",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "c9938005-f24c-4f90-9fb0-800bb73c43c7"
      },
      "source": [
        "my_identity = np.eye(3)\n",
        "my_identity"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 0., 0.],\n",
              "       [0., 1., 0.],\n",
              "       [0., 0., 1.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z8kBGqb0DbZF",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "d561faa5-034b-488d-9a23-64a9b48d7ad7"
      },
      "source": [
        "\n",
        "print(my_array2d)\n",
        "print(my_array2d[2,3])"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 1  2  3  4]\n",
            " [ 5  6  7  8]\n",
            " [ 9 10 11 12]]\n",
            "12\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "co48pvRnDnk_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "318f09cb-e905-45cc-f606-c67da6f39d22"
      },
      "source": [
        "onesarray = np.ones([3,4])\n",
        "onesarray\n"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 1., 1., 1.],\n",
              "       [1., 1., 1., 1.],\n",
              "       [1., 1., 1., 1.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lHOjU3PvDw_V",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "d6e0b6c1-f062-4697-9d84-acb38b7c6a96"
      },
      "source": [
        "onesarray.shape"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 4)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fsgqxjw7DzGc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "1902006b-02be-4e42-eae9-41a34bc6679f"
      },
      "source": [
        "onesarray.T"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 1., 1.],\n",
              "       [1., 1., 1.],\n",
              "       [1., 1., 1.],\n",
              "       [1., 1., 1.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kn80HV8ZD1rV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "508ce768-1d9c-46ac-8ef9-7edfd596252a"
      },
      "source": [
        "print(np.dot(onesarray, onesarray.T)) # 3 x 3 matrix\n",
        "np.dot(onesarray.T, onesarray) # 4 x 4 matrix"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[4. 4. 4.]\n",
            " [4. 4. 4.]\n",
            " [4. 4. 4.]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[3., 3., 3., 3.],\n",
              "       [3., 3., 3., 3.],\n",
              "       [3., 3., 3., 3.],\n",
              "       [3., 3., 3., 3.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xqCJ_n7AEAw9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "62a6c536-1990-479a-8f35-e932893b63f2"
      },
      "source": [
        "\n",
        "np.sum(onesarray)"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sp2eyvCbEEPn",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "2a1e6475-fbcd-4692-981d-7409e1c3a3c1"
      },
      "source": [
        "np.sum(onesarray,axis=0)"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3., 3., 3., 3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KleSEMmMEIPA",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e5468c08-15e6-456d-8357-0dbccb1a5013"
      },
      "source": [
        "np.sum(onesarray,axis=1)"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([4., 4., 4.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_aemUj8-ELcs",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "f5cf38c4-dcae-40b6-9b02-b46bb2dfedfb"
      },
      "source": [
        "listarray = np.array([[5,4,3,2,1],[1,2,3,4,5],[1.1,1.2,1.3,1.4,1.5]])\n",
        "print(listarray)"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[5.  4.  3.  2.  1. ]\n",
            " [1.  2.  3.  4.  5. ]\n",
            " [1.1 1.2 1.3 1.4 1.5]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7gVohqWqErdW",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1115378d-270f-4519-8c48-1affc5ebf0ff"
      },
      "source": [
        "dims = listarray.shape\n",
        "dims"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 5)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fwkfd-C0Ev41",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "10490b06-62ec-4126-942c-808ea737934d"
      },
      "source": [
        "print(listarray[:,2:])"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[3.  2.  1. ]\n",
            " [3.  4.  5. ]\n",
            " [1.3 1.4 1.5]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2AIFb9cJE2wc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "78e38376-3a83-44e6-ea7e-e42254b69be4"
      },
      "source": [
        "twod = np.zeros((5, 2))\n",
        "twod"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0.],\n",
              "       [0., 0.],\n",
              "       [0., 0.],\n",
              "       [0., 0.],\n",
              "       [0., 0.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fASF_Z81FUlq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "a0048798-ed4c-496f-d784-1907c3716ac9"
      },
      "source": [
        "for i in range(twod.shape[0]):\n",
        "  twod[i,:] = np.random.randn(2)\n",
        "twod  \n",
        "  \n",
        "  "
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 1.00390297, -0.43355316],\n",
              "       [-0.3759186 , -1.72361497],\n",
              "       [ 0.32477083,  1.70452758],\n",
              "       [ 0.41584414, -0.11473381],\n",
              "       [-0.55309523, -1.3913535 ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LiB-sF4wFwz7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "801fac9b-5e03-4da0-e467-697c2a1e8c54"
      },
      "source": [
        "twod = np.random.random(size=(5,2))\n",
        "twod"
      ],
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.5086277 , 0.47078852],\n",
              "       [0.94610411, 0.94442427],\n",
              "       [0.00365455, 0.38504161],\n",
              "       [0.00808718, 0.96740614],\n",
              "       [0.22539696, 0.05934824]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0dI03wCyF6QH",
        "colab_type": "code",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "outputId": "f52a3c64-5cae-46c2-8544-c526d4bc6fd2"
      },
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-b37f61f1-de27-4e8e-917d-5df71a2835ff\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-b37f61f1-de27-4e8e-917d-5df71a2835ff\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving mtcars.csv to mtcars.csv\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LevcC-L4H3U_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import io\n",
        "arrcars = np.genfromtxt(io.BytesIO(uploaded['mtcars.csv']), delimiter=',', skip_header=1, usecols=(1,2,3,4,5,6,7,8,9,10,11))\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BruSJ-7ZIU2t",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "55699ba5-c71f-473a-8649-749160ae8585"
      },
      "source": [
        "arrcars"
      ],
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 21.   ,   6.   , 160.   , 110.   ,   3.9  ,   2.62 ,  16.46 ,\n",
              "          0.   ,   1.   ,   4.   ,   4.   ],\n",
              "       [ 21.   ,   6.   , 160.   , 110.   ,   3.9  ,   2.875,  17.02 ,\n",
              "          0.   ,   1.   ,   4.   ,   4.   ],\n",
              "       [ 22.8  ,   4.   , 108.   ,  93.   ,   3.85 ,   2.32 ,  18.61 ,\n",
              "          1.   ,   1.   ,   4.   ,   1.   ],\n",
              "       [ 21.4  ,   6.   , 258.   , 110.   ,   3.08 ,   3.215,  19.44 ,\n",
              "          1.   ,   0.   ,   3.   ,   1.   ],\n",
              "       [ 18.7  ,   8.   , 360.   , 175.   ,   3.15 ,   3.44 ,  17.02 ,\n",
              "          0.   ,   0.   ,   3.   ,   2.   ],\n",
              "       [ 18.1  ,   6.   , 225.   , 105.   ,   2.76 ,   3.46 ,  20.22 ,\n",
              "          1.   ,   0.   ,   3.   ,   1.   ],\n",
              "       [ 14.3  ,   8.   , 360.   , 245.   ,   3.21 ,   3.57 ,  15.84 ,\n",
              "          0.   ,   0.   ,   3.   ,   4.   ],\n",
              "       [ 24.4  ,   4.   , 146.7  ,  62.   ,   3.69 ,   3.19 ,  20.   ,\n",
              "          1.   ,   0.   ,   4.   ,   2.   ],\n",
              "       [ 22.8  ,   4.   , 140.8  ,  95.   ,   3.92 ,   3.15 ,  22.9  ,\n",
              "          1.   ,   0.   ,   4.   ,   2.   ],\n",
              "       [ 19.2  ,   6.   , 167.6  , 123.   ,   3.92 ,   3.44 ,  18.3  ,\n",
              "          1.   ,   0.   ,   4.   ,   4.   ],\n",
              "       [ 17.8  ,   6.   , 167.6  , 123.   ,   3.92 ,   3.44 ,  18.9  ,\n",
              "          1.   ,   0.   ,   4.   ,   4.   ],\n",
              "       [ 16.4  ,   8.   , 275.8  , 180.   ,   3.07 ,   4.07 ,  17.4  ,\n",
              "          0.   ,   0.   ,   3.   ,   3.   ],\n",
              "       [ 17.3  ,   8.   , 275.8  , 180.   ,   3.07 ,   3.73 ,  17.6  ,\n",
              "          0.   ,   0.   ,   3.   ,   3.   ],\n",
              "       [ 15.2  ,   8.   , 275.8  , 180.   ,   3.07 ,   3.78 ,  18.   ,\n",
              "          0.   ,   0.   ,   3.   ,   3.   ],\n",
              "       [ 10.4  ,   8.   , 472.   , 205.   ,   2.93 ,   5.25 ,  17.98 ,\n",
              "          0.   ,   0.   ,   3.   ,   4.   ],\n",
              "       [ 10.4  ,   8.   , 460.   , 215.   ,   3.   ,   5.424,  17.82 ,\n",
              "          0.   ,   0.   ,   3.   ,   4.   ],\n",
              "       [ 14.7  ,   8.   , 440.   , 230.   ,   3.23 ,   5.345,  17.42 ,\n",
              "          0.   ,   0.   ,   3.   ,   4.   ],\n",
              "       [ 32.4  ,   4.   ,  78.7  ,  66.   ,   4.08 ,   2.2  ,  19.47 ,\n",
              "          1.   ,   1.   ,   4.   ,   1.   ],\n",
              "       [ 30.4  ,   4.   ,  75.7  ,  52.   ,   4.93 ,   1.615,  18.52 ,\n",
              "          1.   ,   1.   ,   4.   ,   2.   ],\n",
              "       [ 33.9  ,   4.   ,  71.1  ,  65.   ,   4.22 ,   1.835,  19.9  ,\n",
              "          1.   ,   1.   ,   4.   ,   1.   ],\n",
              "       [ 21.5  ,   4.   , 120.1  ,  97.   ,   3.7  ,   2.465,  20.01 ,\n",
              "          1.   ,   0.   ,   3.   ,   1.   ],\n",
              "       [ 15.5  ,   8.   , 318.   , 150.   ,   2.76 ,   3.52 ,  16.87 ,\n",
              "          0.   ,   0.   ,   3.   ,   2.   ],\n",
              "       [ 15.2  ,   8.   , 304.   , 150.   ,   3.15 ,   3.435,  17.3  ,\n",
              "          0.   ,   0.   ,   3.   ,   2.   ],\n",
              "       [ 13.3  ,   8.   , 350.   , 245.   ,   3.73 ,   3.84 ,  15.41 ,\n",
              "          0.   ,   0.   ,   3.   ,   4.   ],\n",
              "       [ 19.2  ,   8.   , 400.   , 175.   ,   3.08 ,   3.845,  17.05 ,\n",
              "          0.   ,   0.   ,   3.   ,   2.   ],\n",
              "       [ 27.3  ,   4.   ,  79.   ,  66.   ,   4.08 ,   1.935,  18.9  ,\n",
              "          1.   ,   1.   ,   4.   ,   1.   ],\n",
              "       [ 26.   ,   4.   , 120.3  ,  91.   ,   4.43 ,   2.14 ,  16.7  ,\n",
              "          0.   ,   1.   ,   5.   ,   2.   ],\n",
              "       [ 30.4  ,   4.   ,  95.1  , 113.   ,   3.77 ,   1.513,  16.9  ,\n",
              "          1.   ,   1.   ,   5.   ,   2.   ],\n",
              "       [ 15.8  ,   8.   , 351.   , 264.   ,   4.22 ,   3.17 ,  14.5  ,\n",
              "          0.   ,   1.   ,   5.   ,   4.   ],\n",
              "       [ 19.7  ,   6.   , 145.   , 175.   ,   3.62 ,   2.77 ,  15.5  ,\n",
              "          0.   ,   1.   ,   5.   ,   6.   ],\n",
              "       [ 15.   ,   8.   , 301.   , 335.   ,   3.54 ,   3.57 ,  14.6  ,\n",
              "          0.   ,   1.   ,   5.   ,   8.   ],\n",
              "       [ 21.4  ,   4.   , 121.   , 109.   ,   4.11 ,   2.78 ,  18.6  ,\n",
              "          1.   ,   1.   ,   4.   ,   2.   ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X2i0qS1OIZuN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4453359b-b6f2-4d57-a82f-e25485a08a93"
      },
      "source": [
        "print(arrcars.shape)"
      ],
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(32, 11)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6-ZIZmd8IggP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "44c9ca94-a773-43fa-cf59-512ebacaa2fd"
      },
      "source": [
        "print(arrcars[0:2])"
      ],
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 21.      6.    160.    110.      3.9     2.62   16.46    0.      1.\n",
            "    4.      4.   ]\n",
            " [ 21.      6.    160.    110.      3.9     2.875  17.02    0.      1.\n",
            "    4.      4.   ]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8erM8sjvIkf8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "93ee2679-9767-4bb5-89e2-8145c51c721a"
      },
      "source": [
        "dfcars = pd.read_csv(io.BytesIO(uploaded['mtcars.csv']))\n",
        "dfcars.head()"
      ],
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mazda RX4</td>\n",
              "      <td>21.0</td>\n",
              "      <td>6</td>\n",
              "      <td>160.0</td>\n",
              "      <td>110</td>\n",
              "      <td>3.90</td>\n",
              "      <td>2.620</td>\n",
              "      <td>16.46</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Mazda RX4 Wag</td>\n",
              "      <td>21.0</td>\n",
              "      <td>6</td>\n",
              "      <td>160.0</td>\n",
              "      <td>110</td>\n",
              "      <td>3.90</td>\n",
              "      <td>2.875</td>\n",
              "      <td>17.02</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Datsun 710</td>\n",
              "      <td>22.8</td>\n",
              "      <td>4</td>\n",
              "      <td>108.0</td>\n",
              "      <td>93</td>\n",
              "      <td>3.85</td>\n",
              "      <td>2.320</td>\n",
              "      <td>18.61</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Hornet 4 Drive</td>\n",
              "      <td>21.4</td>\n",
              "      <td>6</td>\n",
              "      <td>258.0</td>\n",
              "      <td>110</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.215</td>\n",
              "      <td>19.44</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hornet Sportabout</td>\n",
              "      <td>18.7</td>\n",
              "      <td>8</td>\n",
              "      <td>360.0</td>\n",
              "      <td>175</td>\n",
              "      <td>3.15</td>\n",
              "      <td>3.440</td>\n",
              "      <td>17.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Unnamed: 0   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n",
              "0          Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n",
              "1      Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n",
              "2         Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n",
              "3     Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n",
              "4  Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o3rXsTjjI8JU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "2b3566ac-6251-497d-a098-d4d0c4f9b3ee"
      },
      "source": [
        "\n",
        "dfcars = dfcars.rename(columns={\"Unnamed: 0\":\"name\"})\n",
        "dfcars.head()"
      ],
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mazda RX4</td>\n",
              "      <td>21.0</td>\n",
              "      <td>6</td>\n",
              "      <td>160.0</td>\n",
              "      <td>110</td>\n",
              "      <td>3.90</td>\n",
              "      <td>2.620</td>\n",
              "      <td>16.46</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Mazda RX4 Wag</td>\n",
              "      <td>21.0</td>\n",
              "      <td>6</td>\n",
              "      <td>160.0</td>\n",
              "      <td>110</td>\n",
              "      <td>3.90</td>\n",
              "      <td>2.875</td>\n",
              "      <td>17.02</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Datsun 710</td>\n",
              "      <td>22.8</td>\n",
              "      <td>4</td>\n",
              "      <td>108.0</td>\n",
              "      <td>93</td>\n",
              "      <td>3.85</td>\n",
              "      <td>2.320</td>\n",
              "      <td>18.61</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Hornet 4 Drive</td>\n",
              "      <td>21.4</td>\n",
              "      <td>6</td>\n",
              "      <td>258.0</td>\n",
              "      <td>110</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.215</td>\n",
              "      <td>19.44</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hornet Sportabout</td>\n",
              "      <td>18.7</td>\n",
              "      <td>8</td>\n",
              "      <td>360.0</td>\n",
              "      <td>175</td>\n",
              "      <td>3.15</td>\n",
              "      <td>3.440</td>\n",
              "      <td>17.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                name   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n",
              "0          Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n",
              "1      Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n",
              "2         Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n",
              "3     Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n",
              "4  Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yjpN-_JHJXCy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 578
        },
        "outputId": "b2434f9d-a76f-4c61-8c94-3a6281b1ca02"
      },
      "source": [
        "dfcars.mpg"
      ],
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     21.0\n",
              "1     21.0\n",
              "2     22.8\n",
              "3     21.4\n",
              "4     18.7\n",
              "5     18.1\n",
              "6     14.3\n",
              "7     24.4\n",
              "8     22.8\n",
              "9     19.2\n",
              "10    17.8\n",
              "11    16.4\n",
              "12    17.3\n",
              "13    15.2\n",
              "14    10.4\n",
              "15    10.4\n",
              "16    14.7\n",
              "17    32.4\n",
              "18    30.4\n",
              "19    33.9\n",
              "20    21.5\n",
              "21    15.5\n",
              "22    15.2\n",
              "23    13.3\n",
              "24    19.2\n",
              "25    27.3\n",
              "26    26.0\n",
              "27    30.4\n",
              "28    15.8\n",
              "29    19.7\n",
              "30    15.0\n",
              "31    21.4\n",
              "Name: mpg, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tyDRsnm5JhVp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "8a651c84-9d4b-4591-f5b6-f19a9ce7374d"
      },
      "source": [
        "dfcars.mpg.values"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([21. , 21. , 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,\n",
              "       16.4, 17.3, 15.2, 10.4, 10.4, 14.7, 32.4, 30.4, 33.9, 21.5, 15.5,\n",
              "       15.2, 13.3, 19.2, 27.3, 26. , 30.4, 15.8, 19.7, 15. , 21.4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3oYFwcVdJl8N",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "?plt.hist"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IZ_pr1utJsod",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 318
        },
        "outputId": "2c3093bd-c89f-482d-af90-be5ddc592831"
      },
      "source": [
        "plt.hist(dfcars.mpg.values,bins=20)\n",
        "plt.xlabel(\"mpg\")\n",
        "plt.ylabel(\"freequency\")\n",
        "plt.title(\"Miler per Gallon\")"
      ],
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Miler per Gallon')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KkujsUlKKFIN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 318
        },
        "outputId": "5e214521-b34b-4f87-934d-b3880ffddc4a"
      },
      "source": [
        "dfcars.mpg.hist(bins=20)\n",
        "plt.xlabel(\"mpg\")\n",
        "plt.ylabel(\"Freequency\")\n",
        "plt.title(\"Miles per Gallon\")"
      ],
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Miles per Gallon')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 71
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LnpFs7uYKh8V",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 578
        },
        "outputId": "b579c2b9-2a16-464f-9f8b-b3234aa7f82c"
      },
      "source": [
        "dfcars['mpg']"
      ],
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     21.0\n",
              "1     21.0\n",
              "2     22.8\n",
              "3     21.4\n",
              "4     18.7\n",
              "5     18.1\n",
              "6     14.3\n",
              "7     24.4\n",
              "8     22.8\n",
              "9     19.2\n",
              "10    17.8\n",
              "11    16.4\n",
              "12    17.3\n",
              "13    15.2\n",
              "14    10.4\n",
              "15    10.4\n",
              "16    14.7\n",
              "17    32.4\n",
              "18    30.4\n",
              "19    33.9\n",
              "20    21.5\n",
              "21    15.5\n",
              "22    15.2\n",
              "23    13.3\n",
              "24    19.2\n",
              "25    27.3\n",
              "26    26.0\n",
              "27    30.4\n",
              "28    15.8\n",
              "29    19.7\n",
              "30    15.0\n",
              "31    21.4\n",
              "Name: mpg, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "juD-sJ-pKnoT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "a3e6dc31-5f76-4086-b437-7e3bfe2dc776"
      },
      "source": [
        "dfcars[[\"am\",\"mpg\"]]"
      ],
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>am</th>\n",
              "      <th>mpg</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>22.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>21.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>18.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>18.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0</td>\n",
              "      <td>14.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0</td>\n",
              "      <td>24.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0</td>\n",
              "      <td>22.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0</td>\n",
              "      <td>19.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0</td>\n",
              "      <td>17.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0</td>\n",
              "      <td>16.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0</td>\n",
              "      <td>17.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0</td>\n",
              "      <td>15.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0</td>\n",
              "      <td>10.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0</td>\n",
              "      <td>10.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0</td>\n",
              "      <td>14.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1</td>\n",
              "      <td>32.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>1</td>\n",
              "      <td>30.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>1</td>\n",
              "      <td>33.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0</td>\n",
              "      <td>21.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0</td>\n",
              "      <td>15.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>0</td>\n",
              "      <td>15.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>0</td>\n",
              "      <td>13.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>0</td>\n",
              "      <td>19.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>1</td>\n",
              "      <td>27.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>1</td>\n",
              "      <td>26.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>1</td>\n",
              "      <td>30.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>1</td>\n",
              "      <td>15.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>1</td>\n",
              "      <td>19.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>1</td>\n",
              "      <td>15.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>1</td>\n",
              "      <td>21.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    am   mpg\n",
              "0    1  21.0\n",
              "1    1  21.0\n",
              "2    1  22.8\n",
              "3    0  21.4\n",
              "4    0  18.7\n",
              "5    0  18.1\n",
              "6    0  14.3\n",
              "7    0  24.4\n",
              "8    0  22.8\n",
              "9    0  19.2\n",
              "10   0  17.8\n",
              "11   0  16.4\n",
              "12   0  17.3\n",
              "13   0  15.2\n",
              "14   0  10.4\n",
              "15   0  10.4\n",
              "16   0  14.7\n",
              "17   1  32.4\n",
              "18   1  30.4\n",
              "19   1  33.9\n",
              "20   0  21.5\n",
              "21   0  15.5\n",
              "22   0  15.2\n",
              "23   0  13.3\n",
              "24   0  19.2\n",
              "25   1  27.3\n",
              "26   1  26.0\n",
              "27   1  30.4\n",
              "28   1  15.8\n",
              "29   1  19.7\n",
              "30   1  15.0\n",
              "31   1  21.4"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "INZOQkRYKst9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "155ed643-d212-448e-d003-5a00443bd83e"
      },
      "source": [
        "print(dfcars.shape)     # 12 columns, each of length 32\n",
        "print(len(dfcars))      # the number of rows in the dataframe, also the length of a series\n",
        "print(len(dfcars.mpg)) "
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(32, 12)\n",
            "32\n",
            "32\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfwmqi9HPKJo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "cf21e58c-877c-42ba-be36-a41216ff22bb"
      },
      "source": [
        "for ele in dfcars: # iterating iterates over column names though, like a dictionary\n",
        "    print(ele)"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "name\n",
            "mpg\n",
            "cyl\n",
            "disp\n",
            "hp\n",
            "drat\n",
            "wt\n",
            "qsec\n",
            "vs\n",
            "am\n",
            "gear\n",
            "carb\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D43NKLOuPNeg",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "d555f1e7-0eee-45f3-952f-37ae1ce62756"
      },
      "source": [
        "dfcars.columns"
      ],
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['name', 'mpg', 'cyl', 'disp', 'hp', 'drat', 'wt', 'qsec', 'vs', 'am', 'gear', 'carb'], dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-fNVoSr3PRQe",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 561
        },
        "outputId": "f3200a9e-73f8-4c1c-bb2c-d5617740fae8"
      },
      "source": [
        "for ele in dfcars.cyl:\n",
        "  print(ele)"
      ],
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "6\n",
            "6\n",
            "4\n",
            "6\n",
            "8\n",
            "6\n",
            "8\n",
            "4\n",
            "4\n",
            "6\n",
            "6\n",
            "8\n",
            "8\n",
            "8\n",
            "8\n",
            "8\n",
            "8\n",
            "4\n",
            "4\n",
            "4\n",
            "4\n",
            "8\n",
            "8\n",
            "8\n",
            "8\n",
            "4\n",
            "4\n",
            "4\n",
            "8\n",
            "6\n",
            "8\n",
            "4\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MXaf2zhNPXcz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "f32b82a8-7503-47bb-b495-7bcd01324e62"
      },
      "source": [
        "new_index = np.arange(5,37)\n",
        "dfcars_reindex = dfcars.reindex(new_index)\n",
        "dfcars_reindex.head()"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Valiant</td>\n",
              "      <td>18.1</td>\n",
              "      <td>6.0</td>\n",
              "      <td>225.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>2.76</td>\n",
              "      <td>3.46</td>\n",
              "      <td>20.22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Duster 360</td>\n",
              "      <td>14.3</td>\n",
              "      <td>8.0</td>\n",
              "      <td>360.0</td>\n",
              "      <td>245.0</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.57</td>\n",
              "      <td>15.84</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Merc 240D</td>\n",
              "      <td>24.4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>146.7</td>\n",
              "      <td>62.0</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.19</td>\n",
              "      <td>20.00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Merc 230</td>\n",
              "      <td>22.8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>140.8</td>\n",
              "      <td>95.0</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.15</td>\n",
              "      <td>22.90</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Merc 280</td>\n",
              "      <td>19.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>167.6</td>\n",
              "      <td>123.0</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.30</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         name   mpg  cyl   disp     hp  drat    wt   qsec   vs   am  gear  carb\n",
              "5     Valiant  18.1  6.0  225.0  105.0  2.76  3.46  20.22  1.0  0.0   3.0   1.0\n",
              "6  Duster 360  14.3  8.0  360.0  245.0  3.21  3.57  15.84  0.0  0.0   3.0   4.0\n",
              "7   Merc 240D  24.4  4.0  146.7   62.0  3.69  3.19  20.00  1.0  0.0   4.0   2.0\n",
              "8    Merc 230  22.8  4.0  140.8   95.0  3.92  3.15  22.90  1.0  0.0   4.0   2.0\n",
              "9    Merc 280  19.2  6.0  167.6  123.0  3.92  3.44  18.30  1.0  0.0   4.0   4.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "er75KV3nP35k",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "aedb0c83-5985-4c9e-ad75-0a984ee66504"
      },
      "source": [
        "dfcars_reindex.iloc[0:3]"
      ],
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Valiant</td>\n",
              "      <td>18.1</td>\n",
              "      <td>6.0</td>\n",
              "      <td>225.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>2.76</td>\n",
              "      <td>3.46</td>\n",
              "      <td>20.22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Duster 360</td>\n",
              "      <td>14.3</td>\n",
              "      <td>8.0</td>\n",
              "      <td>360.0</td>\n",
              "      <td>245.0</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.57</td>\n",
              "      <td>15.84</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Merc 240D</td>\n",
              "      <td>24.4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>146.7</td>\n",
              "      <td>62.0</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.19</td>\n",
              "      <td>20.00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         name   mpg  cyl   disp     hp  drat    wt   qsec   vs   am  gear  carb\n",
              "5     Valiant  18.1  6.0  225.0  105.0  2.76  3.46  20.22  1.0  0.0   3.0   1.0\n",
              "6  Duster 360  14.3  8.0  360.0  245.0  3.21  3.57  15.84  0.0  0.0   3.0   4.0\n",
              "7   Merc 240D  24.4  4.0  146.7   62.0  3.69  3.19  20.00  1.0  0.0   4.0   2.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y0OLiufgQEeA",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "bf865c9d-901b-4110-a419-2d4b4a337ecd"
      },
      "source": [
        "dfcars_reindex.loc[0:7]"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Valiant</td>\n",
              "      <td>18.1</td>\n",
              "      <td>6.0</td>\n",
              "      <td>225.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>2.76</td>\n",
              "      <td>3.46</td>\n",
              "      <td>20.22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Duster 360</td>\n",
              "      <td>14.3</td>\n",
              "      <td>8.0</td>\n",
              "      <td>360.0</td>\n",
              "      <td>245.0</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.57</td>\n",
              "      <td>15.84</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Merc 240D</td>\n",
              "      <td>24.4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>146.7</td>\n",
              "      <td>62.0</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.19</td>\n",
              "      <td>20.00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         name   mpg  cyl   disp     hp  drat    wt   qsec   vs   am  gear  carb\n",
              "5     Valiant  18.1  6.0  225.0  105.0  2.76  3.46  20.22  1.0  0.0   3.0   1.0\n",
              "6  Duster 360  14.3  8.0  360.0  245.0  3.21  3.57  15.84  0.0  0.0   3.0   4.0\n",
              "7   Merc 240D  24.4  4.0  146.7   62.0  3.69  3.19  20.00  1.0  0.0   4.0   2.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b5ekGTCGQLZn",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "8c68ccbd-e9d2-4a82-d4ba-5b42def3cdea"
      },
      "source": [
        "dfcars_reindex.iloc[2:5,1:4]"
      ],
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>24.4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>146.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>22.8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>140.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>19.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>167.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    mpg  cyl   disp\n",
              "7  24.4  4.0  146.7\n",
              "8  22.8  4.0  140.8\n",
              "9  19.2  6.0  167.6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lk3iLyC_QeQL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "458db06d-327c-43b2-dced-153b4a07b0bb"
      },
      "source": [
        "dfcars_reindex.loc[7:9, ['mpg', 'cyl', 'disp']]"
      ],
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>24.4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>146.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>22.8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>140.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>19.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>167.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    mpg  cyl   disp\n",
              "7  24.4  4.0  146.7\n",
              "8  22.8  4.0  140.8\n",
              "9  19.2  6.0  167.6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QKKPA4EkQqid",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 173
        },
        "outputId": "51d83764-5f43-4f30-f55f-165c15a95ca1"
      },
      "source": [
        "column1 =  pd.Series(range(4))\n",
        "column2 = pd.Series(range(4,8))\n",
        "\n",
        "table = pd.DataFrame({'col1': column1,'col2':column2})\n",
        "\n",
        "table = table.rename(columns={'col_1':'Col_1','col_1':'Col_1'})\n",
        "\n",
        "table = table.rename({0: \"zero\", 1: \"one\", 2: \"two\", 3: \"three\"})\n",
        "\n",
        "table\n"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>col1</th>\n",
              "      <th>col2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>zero</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>one</th>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>two</th>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>three</th>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       col1  col2\n",
              "zero      0     4\n",
              "one       1     5\n",
              "two       2     6\n",
              "three     3     7"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jNKR3kM3RtNT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "43b6cb19-68c6-4326-ff57-95c11d32cfb1"
      },
      "source": [
        "\n",
        "dfcars.dtypes"
      ],
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "name     object\n",
              "mpg     float64\n",
              "cyl       int64\n",
              "disp    float64\n",
              "hp        int64\n",
              "drat    float64\n",
              "wt      float64\n",
              "qsec    float64\n",
              "vs        int64\n",
              "am        int64\n",
              "gear      int64\n",
              "carb      int64\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TtEduI76SFsx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "990c075d-3445-4cb1-a48d-b2a560ac8316"
      },
      "source": [
        "diff_values = ['a',1,2,3]\n",
        "diff_series = pd.Series(diff_values)\n",
        "print(diff_series)\n",
        "diff_series.dtypes"
      ],
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0    a\n",
            "1    1\n",
            "2    2\n",
            "3    3\n",
            "dtype: object\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('O')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CX0Eay5DSboP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "cc327d21-3379-47f0-ab2a-cd1f040bc821"
      },
      "source": [
        "diff_series.values"
      ],
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['a', 1, 2, 3], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "twuhDv3HTJoE",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "9d8189de-c742-4538-b406-d1cf2fbd83c6"
      },
      "source": [
        "samevalues =[2,3,4]\n",
        "same_Series= pd.Series(samevalues)\n",
        "\n",
        "print(same_Series)\n",
        "\n",
        "\n",
        "same_Series.dtypes\n"
      ],
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0    2\n",
            "1    3\n",
            "2    4\n",
            "dtype: int64\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int64')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "09tIfUACmue2",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "c31694ca-c632-4760-da35-6f3e54c679b7"
      },
      "source": [
        "same_Series.head()"
      ],
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    2\n",
              "1    3\n",
              "2    4\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5q69HBJwnBfx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0U1zdjRSoCsF",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 308
        },
        "outputId": "9f17abfe-4508-4be6-943b-b9e6c51a1b62"
      },
      "source": [
        "sns.set_context(\"notebook\")\n",
        "dfcars.mpg.plot.hist()\n",
        "plt.xlabel(\"mpg\")"
      ],
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'mpg')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NYTAlty-oNAH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "outputId": "9d25540b-b86a-4fcf-e9a2-9d0881db4e1f"
      },
      "source": [
        "sns.set_context(\"poster\")\n",
        "plt.hist(dfcars.mpg, bins=20);\n",
        "plt.xlabel(\"mpg\");\n",
        "plt.ylabel(\"Frequency\")\n",
        "plt.title(\"Miles per Gallon\");"
      ],
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\ngg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OuvF_ShWpQHp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 305
        },
        "outputId": "03002d98-8dd4-4878-f2a8-c3d41055436f"
      },
      "source": [
        "sns.set_style(\"whitegrid\")\n",
        "sns.set_context(\"talk\")\n",
        "\n",
        "dfcars.drat.plot.hist()"
      ],
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fa1e0f7cf60>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nl3/84x+O9u3bOy5duuShyqzz7LPPOiZMmOB46KGHHMOHD//d7evKmDHaL7V5zKSmpjrat2/v+OST\nTwzv66rxwtdcFmnQoIFCQ0OVk5Nzze127typrl27qmPHjuXL2rVrpz59+uijjz5yd5keV91+KeNw\nOJSbmytHLb32Ni0tTdu2bdPcuXOrvU9dGDPO9EuZ2j5mcnNz9euvv1Z7e1eNF8LEg3Jzc3Xx4kUd\nP35cS5Ys0X/+8x/16dOnyu1LS0uVnp6uW2+9tcK62267TSdOnFBBQYE7S/YIo/1ypT/+8Y+KiopS\nVFSU5s6dq+zsbDdX6zkOh0MLFy5UdHS0OnToUK196sKYcaZfrlSbx8zs2bMVFRWlLl266JFHHlF6\nevo1t3fleGHOxIPmzZunnTt3SpL8/PwUExOj6dOnV7l9dna2iouLyx9lfKWwsDA5HI7ym2R6M6P9\nIknXX3+9JkyYoC5dusjPz0+pqalav369jhw5og0bNsjf398TpbtVYmKijh49qtdff73a+9SFMeNM\nv0i1e8z4+flp0KBB6tu3r0JCQpSenq533nlH48aN08aNG9WmTZtK93PleCFMPGjGjBkaO3aszp49\nq61bt6q4uFglJSVVDuKyp05Wtr7sSZSFhYXuK9hDjPaL9NtE45UGDx6sm2++WQsWLFBiYqLGjBnj\n7rLdKjc3V/Hx8YqNjTX0oLjaPmac7Repdo+Z7t27q3v37uU/9+/fX/369dOoUaP02muvKT4+vtL9\nXDle+JrLg8pOQxw1apTefvttffvtt9f8zrfsl1lcXFxhXdkgqA1nohjtl6o8+OCDatCggfbs2eOG\nKj1r2bJl8vPz0+TJkw3tV9vHjLP9UpXaNGb+1y233KI+ffooNTW1ym1cOV4IE4v4+fmpf//++vjj\nj6tM/uDgYPn7+5c/yvhKWVlZ8vHxqfTjqTerTr9UxdfXV02bNtWlS5fcVJ1nnDt3TqtXr9a4ceN0\n/vx5nTp1SqdOnVJRUZFKSkp06tSpKl9jbR4zZvqlKrVlzFSlWbNm13xtrhwvfM1locLCQjkcDuXl\n5VWa/r6+vmrfvr0OHz5cYV1aWpoiIiLUoEEDT5TqUb/XL1UpKSnRmTNnKp1M9CYXLlxQSUmJ4uLi\nFBcXV2F9//79NXXqVD3zzDMV1tXmMWOmX6pSW8ZMVTIyMhQSElLleleOF8LEAy5evKjQ0NCrluXm\n5mrnzp1q1qyZGjduLEk6ffq0CgoK1K5du/LtBg0apCVLlujIkSPlp+4dP35cqampmjp1qudehBuY\n6ZfK9n377bdVVFSkP/zhD+4v3o3Cw8MrnVxOSEhQfn6+5s2bp9atW0uqW2PGbL/U5jFT2Wvbt2+f\n9u7dq+jo6PJl7hwvPBzLAyZOnKj69eurW7duCgsL05kzZ7R582adPXtWS5Ys0dChQyVJEyZM0L//\n/e+rTufLzc3V/fffr4KCAk2ePFk2m02rVq2Sw+FQYmLiNd911HRm+qVLly4aOnSo2rdvL39/f+3d\nu1c7d+5UVFSU3nvvPdWrV/veJ02YMEE5OTnaunXrVcvq0pipTHX7pTaPmYkTJ6pBgwbq1q2bQkJC\n9MMPP2j9+vVq1KiRNm7cqObNm0ty73jx3t7zIsOHD9fWrVu1Zs0a5eTkqFGjRuratateeukl9ezZ\n85r7XnfddVqzZo0WLVqkN954Q6WlperVq5fmz5/v9X8UzPTLsGHDdODAASUnJ6ukpEQtWrTQY489\npmnTpnn1HwVXqM1jxozaPGYGDBigpKQkvfvuu8rNzVVoaKjuu+8+/eUvfykPkqq4arzwyQQAYBpn\ncwEATCNMAACmESYAANMIEwCAaYQJAMA0wgQAYBphAgAwjTABAJhGmAAATCNMAACm/R+IFuASi1ec\nBAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-R-zYeaUpi54",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 321
        },
        "outputId": "43cd7b99-383d-4f83-af4d-8dcbb688c7dc"
      },
      "source": [
        "plt.xlabel(\"Drat\")\n",
        "plt.ylabel(\"Freequency\")\n",
        "plt.title(\"Rear Axis ratio (drat)\")\n",
        "plt.axvline(dfcars.drat.mean(), 0, .75, color='r', label='Mean');"
      ],
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6WPUKaD1p0er",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 308
        },
        "outputId": "db629feb-f965-49c5-95f2-59611e57744f"
      },
      "source": [
        "sns.set_context(\"notebook\")\n",
        "plt.scatter(dfcars.wt,dfcars.mpg)\n",
        "plt.xlabel(\"weight\")\n",
        "plt.ylabel(\"Miles per Gallon\")\n"
      ],
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Miles per Gallon')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 95
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAESCAYAAAAMifkAAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzt3X1UVHX+B/D3zAiID4AkGKIr5SrR\n4gOBVpuuihnWopL9PLm6tZnm0Uo9FQo+JGiWEq6WpqE9uNuTpmuyIRhqHDe1zYSwRE3Ng4gDaPKQ\nCsPTzP39YUzOwnDvjHPvnYf36xzPYe7cufc942U+3O/33u9XIwiCACIionZo1Q5ARETOj8WCiIhE\nsVgQEZEoFgsiIhLFYkFERKJYLIiISBSLBRERiWKxICIiUSwWREQkqoNSO3r22Wdx8eJFaLVadOrU\nCS+//DIiIiIQGxsLb29v+Pj4AAASExMxfPhwpWIREZEEGqWG+7h27Rq6du0KANi/fz82bNiAXbt2\nITY2FhkZGejfv78SMYiIyA6KnVm0FAoAuH79OjQazS1v02Qyoba2Fl5eXg7ZHhGRJ2g5R/Dx8ZH8\n3alYsQCAxYsX4/DhwxAEAe+++655eWJiIgRBQHR0NF588UX4+flJ2l5tbS3OnDkjV1wiIrcWGRlp\n7gIQo1gz1M0yMzORnZ2Nd955B+Xl5QgJCUFjYyNeffVV1NbWYvXq1ZK2U19fjxMnTsiclojIPdlS\nLCCoZMCAAUJVVZXFsh9//FEYNWqU5G3U19cL+fn5Qn19vV0Z8vPz7Xqd3Jw1lyAwm72cNZuz5hIE\nZrOH1Fz2fHcqculsbW0tysvLzY/z8vLg7+8PHx8fXLt2raVoIScnBxEREUpEIiIiGyjSZ2EwGDBv\n3jwYDAZotVr4+/sjIyMDlZWVmDNnDoxGI0wmE/r27YuUlBQlIhERkQ0UKRbdu3fH9u3b23wuMzNT\niQhERHQLeAc3ERGJUvTSWU+TWahHeu5plNUY0DPAF/PjwpEQFap2LCIim7FYyCSzUI+Fnx2HockI\nANDXGLDws+MAwIJBRC6HzVAySc89bS4ULQxNRqTnnlYpERGR/VgsZFJWY7BpORGRM2OxkEnPAF+b\nlhMROTMWC5nMjwuHr5fOYpmvlw7z48JVSkREZD92cMukpRObV0MRkTtgsZBRQlQoiwMRuQU2QxER\nkSgWCyIiEsViQUREolgsiIhIFDu43QjHoiIiubBYuAmORUVEcmIzlJvgWFREJCcWCzfBsaiISE4s\nFm6CY1ERkZxYLNwEx6IiIjmxg9tNcCwqIpITi4Ub4VhURCQXNkMREZEoFgsiIhLFYkFERKJYLIiI\nSBSLBRERiWKxICIiUSwWREQkisWCiIhEsVgQEZEoj72DO7NQjxXZl1G5I7vNoTE4kRAR0W88slj8\nNlGQCUDriYI4kRARkSWPbIYSmyiIEwkREVlS7Mzi2WefxcWLF6HVatGpUye8/PLLiIiIQHFxMZKT\nk1FTU4OAgACkpaUhLCxM1ixiEwVxIiEiIkuKnVmkpaXh888/R2ZmJp5++mksWrQIAJCSkoIpU6Yg\nNzcXU6ZMwdKlS2XPIjZRECcSIiKypFix6Nq1q/nn69evQ6PRoLKyEidPnkR8fDwAID4+HidPnkRV\nVZWsWcQmCuJEQkRElhTt4F68eDEOHz4MQRDw7rvvory8HD169IBOd+OLWafTITg4GOXl5QgMDJQt\nR0sn9YqsH1BZZ2p1tRMnEiIisqQRBEFQeqeZmZnIzs7GvHnzkJSUhOzsbPNzjzzyCNLT0/GHP/xB\ndDsNDQ0oKiqSMyoRkduKjIyEj4+PtJUFlQwYMED4+eefhejoaKG5uVkQBEFobm4WoqOjhcrKSknb\nqK+vF/Lz84X6+nq7MuTn59v1Ork5ay5BYDZ7OWs2Z80lCMxmD6m57PnuVKTPora2FuXl5ebHeXl5\n8Pf3x2233YaIiAjs3r0bALB7925ERETI2gRFRES2U6TPwmAwYN68eTAYDNBqtfD390dGRgY0Gg1S\nU1ORnJyMjRs3ws/PD2lpaUpEIiIiGyhSLLp3747t27e3+Vzfvn2xY8cOJWIQEZGdPPIObiIisg2L\nBRERiWKxICIiUSwWREQkisWCiIhEsVgQEZEoFgsiIhLFYkFERKJYLIiISBSLBRERiWKxICIiUSwW\nREQkisWCiIhEsVgQEZEoSUOUl5aW4o033sCpU6dQV1dn8dyBAwfkyOX2Mgv1nOObiFyGpGKRmJiI\n3r17IykpCb6+vnJncnuZhXos/Ow4DE1GAIC+xoCFnx0HABYMInJKkorF2bNnsXXrVmi1bLVyhPTc\n0+ZC0cLQZER67mkWCyJySpK+/YcMGYKTJ0/KncVjlNUYbFpORKQ2SWcWoaGhmDFjBsaMGYPu3btb\nPDdv3jxZgrmzngG+0LdRGHoGsImPiJyTpDMLg8GAUaNGobm5GRUVFRb/yHbz48Lh66WzWObrpcP8\nuHCVEhERtU/SmcXKlSvlzuFRWvoleDUUEbkKScUCAM6fP4/du3fj8uXLCA4ORnx8PMLCwmSM5t4S\nokJZHIjIZUhqhsrLy8PEiRNRXFwMf39/FBcX47HHHsOXX34pdz4iInICks4s1q5di40bN+K+++4z\nLzty5AheeeUVjB49WrZwRETkHCSdWVRUVCAmJsZiWXR0NDu4iYg8hKRicdddd+H999+3WLZlyxZE\nRETIEorEZRbq8cCqPNyRnI0HVuUhs1CvdiQicmOSmqFSU1Mxe/ZsfPDBBwgJCUF5eTl8fX2RkZEh\ndz5qA4cLISKlSSoWffv2RU5ODo4dO2a+GmrQoEHw8vKSOx+1gcOFEJHSJF8626FDh1b9FqQODhdC\nREqzWixGjBgBjUYjugEOUa48DhdCREqzWizS09OVzEE2mB8XbtFnAXC4ECKSl9ViMXToUCVzkA04\nXAgRKc1qsXjzzTclbYCjzqqDw4UQkZKsFgtH3nBXXV2NBQsW4MKFC/D29kafPn2wfPlyBAYGIjw8\nHP379zdPrPT6668jPJzNKUREzsRqsXDkSLMajQYzZszAvffeCwBIS0vD6tWr8dprrwEAtm3bhs6d\nOztsf0RE5FiSL50FgOvXr6O6utpiWe/evUVfFxAQYC4UADB48GBs3brVll0TEZGKJBWLn376CYmJ\nifjxxx+h0WggCIL5stpTp07ZtEOTyYStW7ciNjbWvOyJJ56A0WjEn/70J8yZMwfe3t42bZOIiOSl\nEQRBEFvpiSeewN13343nnnsOo0ePRl5eHv7+978jKioKEyZMsGmHy5Ytw6VLl/DWW29Bq9WivLwc\nISEhuH79OubPn4/+/fvjhRdekLSthoYGFBUV2bR/IiK6ITIyEj4+PtJWFiSIiYkRGhsbBUEQhOjo\naEEQBKG2tlYYNWqUlJebrVq1Spg2bZrQ0NDQ5vNffvml8Ne//lXy9urr64X8/Hyhvr7ephwt8vPz\n7Xqd3Jw1lyAwm72cNZuz5hIEZrOH1Fz2fHdKaoby8fFBc3MzvLy80K1bN5SVlcHPzw81NTWSK9ia\nNWtQVFSEzZs3m5uZfvnlF/j4+KBjx45obm5Gbm4uR7IlRWUW6nm/CpEEkopFdHQ09uzZg4kTJyIu\nLg7PPPMMvL29LSZDas/Zs2exadMmhIWFYfLkyQCAXr16YcaMGVi6dCk0Gg2am5sRFRXF+zZIMRy9\nl0g6ScXi5hv0XnzxRfz+979HXV0dEhISJO2kX79+OH36dJvPZWVlSdoGkaNx9F4i6Wy6dBYAtFqt\n5CJB5Mw4ei+RdO0Wi+LiYnz99deYOnUqAGD69OloamoyP5+amoo777xT3oREMuHovUTStTut6ubN\nm9GpUyfz48LCQowbNw7jxo1Dv3798M4778gekEgu8+PC4euls1jG0XuJ2tbumUV+fj4WL15sfqzT\n6TBp0iQAN+7mnjhxorzpiGTE0XuJpGu3WFRWVqJLly7mx2lpaeafu3TpgitXrsiXjEgBHL2XSJp2\nm6E6d+6Mixcvmh/fPERHaWmpRRMVERG5r3aLxciRI63Oa7Fu3TqMHDlSjkxERORk2m2Gmjt3LiZP\nnoyEhAQ8+OCDCAoKws8//4z9+/fj6tWr+PTTT5XKSUREKmq3WAQFBWHnzp3YsmULDh48iOrqagQE\nBGDEiBF46qmn0K1bN6VyEhGRikRvygsICJA8CiwREbknm+/gJtfm6QPnefr7J7IXi4UH8fSB8zz9\n/RPdinavhiL30t7AeZ7A098/0a0QLRZGoxFJSUlobGxUIg/JyNMHzvP09090K0SLhU6nw+HDh81z\nbpPrsjZAnqcMnOfp75/oVkhqhvrb3/6G9evXW4w4S67H0wfO8/T3T3QrJHVwf/TRR7hy5Qq2bNmC\nwMBAi7OMAwcOyJWNHMzTB87z9PdPdCskFYv09HS5c5BCPH3gPE9//0T2klQshg4dKncOIiJyYpL6\nLBobG7F27VqMHj0a0dHRAIBDhw7ho48+kjUcERE5B0nF4rXXXsOZM2ewevVqc39Fv379sHXrVlnD\nERGRc5DUDLV//37s3bsXnTp1glZ7o7706NEDly5dkjUcqautoTF6qx2KiFQhqVh4eXnBaLS887Wq\nqgoBAQGyhCL1WRsaY2ZUZ/zaEumw/ah9dZIzZCBydpKaocaOHYukpCSUlpYCAC5fvozly5fjz3/+\ns6zhSD3Whsb4uOi6w/bRUpD0NQYI+K0gZRbqHbYPV8hA5AokFYsXXngBvXr1wvjx43H16lXExcUh\nODgYzz33nNz5SCXWhsCorDM5bB/OMFaTM2QgcgWSmqG8vb2xaNEiLFq0CFVVVejWrRuH/3BzPQN8\noW+jYNzWyfrfF7Y254iN1aRE8xDHiyKSRvIQ5efPn8eePXtw+fJlBAcH4+GHH0ZYWJiM0UhN8+PC\nLfosgBtDY0yN7Nzm+vYM/22tIPUM8FVsOPH2MhDRbyQ1Q2VlZeHRRx/F6dOn4evrizNnzuDRRx9F\nVlaW3PlIJQlRoVg5cQBCA3yhARAa4IuVEwfgT306tbm+Pc057Y3VpFTzEMeLIpJG0pnFG2+8gc2b\nN2PIkCHmZfn5+ViwYAHGjRsnWzhSV1tDYxQUVLS5rj3NOe2N1fTCp8ds3p49OF4UkTSSikVtbS0G\nDx5ssWzQoEGoq6uTJRS5Hnubc6yN1aRk8xDHiyISJ6kZatq0aVizZg0aGhoAAPX19Vi7di2mTZsm\nazhyHY5uzmHzEJFzkXRm8cknn+DKlSv48MMP4efnh6tXr0IQBAQFBVkM+cHhyj2Xo5tz2DxE5Fw4\nRDk5jKObc9g8ROQ8FBmivLq6GgsWLMCFCxfg7e2NPn36YPny5QgMDMSxY8ewdOlSNDQ0IDQ0FOnp\n6bjttttuaX9ERORYkvosbpVGo8GMGTOQm5uLrKws9O7dG6tXr4bJZML8+fOxdOlS5ObmIiYmBqtX\nr1YiEhER2UCRYhEQEIB7773X/Hjw4MEoKytDUVERfHx8EBMTAwCYPHkyvvjiCyUiERGRDSTfwe0o\nJpMJW7duRWxsLMrLy9GzZ0/zc4GBgTCZTKipqeGIth6Ao70SuQ6NIAiCrS+qr6+HVquFt7e3zTtc\ntmwZLl26hLfeegv79u3Dzp07sXnzZvPzgwYNwn/+8x9JxaKhoQFFRUU2ZyD1fVVSh4yCq2i46SZt\nHx0wK9rP6l3iRORYkZGR8PHxkbSupDOLtLQ0PPzwwxg4cCAOHDiAuXPnQqPRYO3atYiNjZUcLC0t\nDSUlJcjIyIBWq0VISAjKysrMz1dVVUGr1dp8VmHLG75ZQUGBeZpYZ+KsuQDHZZu7L8+iUABAgxH4\n15kmvDDRvu17wufmaM6aC2A2e0jNZc8f2pLHhurXrx8AYMOGDUhPT8fbb7+NtWvXSt7RmjVrUFRU\nhA0bNpjPSCIjI1FfX4/8/HwAwLZt2zB27Fib3gC5Jo72SuRaJJ1ZGAwG+Pr6orq6GqWlpYiLiwMA\n6PXSJog5e/YsNm3ahLCwMEyePBkA0KtXL2zYsAGvv/46UlJSLC6dJffnjqO9qtkHw/4fkpukYhEW\nFobPP/8cFy5cwAMPPADgRpNRx44dJe2kX79+OH267dFC77nnHo5e64GsDYHuqsN5KDWkurPtmzyH\npGaolJQUfPLJJ/jmm28wb948AMChQ4fMhYPIVtaGQHfVLzc1Z9zjbH+kBElnFgMHDsS2bdsslo0f\nPx7jx4+XJRR5BncazkPNPhj2/5ASJN+Ud/jwYSxatAizZs0CABw/fhz//e9/ZQtG5Eqs9bUo0Qej\n5r7Jc0gqFh9++CFSU1MRFhaGo0ePAgA6duyIN998U9ZwRK5iflw4vHSW89J76TSK9MFwOHdSgqRi\n8c9//hNbtmzBzJkzodXeeMmdd96J4uJiWcMRuZT/vb3V5ttd7eNu/T/knCTPlBcSEgLgxqCAANDc\n3AwvLy/5khG5kPTc02gyWVaHJpOA9NzTinxpu1P/DzknSWcWQ4YMsRiSAwA++OADi8EBiTwZO5nJ\n3Uk6s1iyZAlmzZqFHTt2oLa2FnFxcejcuTM2bdokdz4il+CONxkS3UxSsQgODsbOnTvxww8/oKys\nDCEhIRg4cKC5/4LI07V1k6EGwKi7gtQLReRAkoco12g0GDRoEAYNGiRnHiKXlBAVivySKnz8zQVz\nv7YAYGeBHjF9AtFbzXBEDmC1WIwYMcLcmd2eAwcOODIPkcva/X15qwugWu6kXjfGX5VMRI5itVhw\nQD8i6TIL9agxNLX53I1ObhYLcm1Wi8XQoUOVzEHk0tobh4md3OQOrBaLt99+G7NnzwaAdu/UbhlY\nkMiTtXeJ7Py4cMBUoWAaIsezWiwqKira/JmIWrN26Wy3Tl5IiApFQYH9v0Ocq4KcgdVisWzZMvPP\nK1euVCQMkauyNj9Hyrg/3NJ2OVcFOYt2L529eX5sa3r27OmwMESuquWL29FnAO3NVcFiQUpqt1jE\nxsaaL58VhNajomk0Gpw6dUqeZEQuRo7xmTiMCDmLdovFXXfdhfr6ejz66KMYP348goODlcpFROAw\nIuQ82h2vIzMzE+vWrUNNTQ3+8pe/YObMmcjOzkZTUxN0Oh10Ol17LyeiW8S5KshZiA7u1L9/fyQl\nJSEvLw9PPfUUDhw4gGHDhuHEiRNK5CPyaJyrgpyF5LGhzp8/j6NHj+LYsWOIiIiAn5+fnLmI6Fec\nq4KcQbvFoqamBtnZ2di1axdqa2sxYcIEfPTRR7wCishN8Z4OsqbdYjF8+HD06tULEyZMMI82W1JS\ngpKSEvM6999/v7wJiUgRvKeD2tNusQgKCkJDQwO2b9+O7du3t3peo9Hgyy+/lC0cESmH93RQe9ot\nFnl5eUrlICKV8Z4Oag+nuiMiANbv3eA9HQSwWJCHyizU44FVebgjORsPrMpDZqFe7Uiq4z0d1B7J\nl84SuQt25LZNrvGtyD2wWJDHUbojN7NQjxXZl1G5I9vpv4B5TwdZw2JBHkfJjtzfzmJMAHgWQ66L\nfRbkcZTsyG3vLIbIlfDMgjyOtYmKbrUjt627n+U4i+Fd1qQGxYpFWloacnNzodfrkZWVhf79+wO4\nMWeGt7c3fHx8AACJiYkYPny4UrHIA8nRkWut09zf1ws1hqZW69t7FsPOeVKLYsVi9OjRePLJJzF1\n6tRWz61bt85cPIiU4OiOXGvNTR29tPD10lk856XVoK6xGXck297hzbusSS2K9VnExMQgJCREqd0R\nKcpas1JNXRNWThyA7p200AAI8PUCNEB1XRME/HZmIPU+D95lTWpxig7uxMREjBs3Dqmpqbh69ara\ncYhs1l6neUJUKDb9ORjFq/6Mzj4d0GS0nKLYlg5v3mXtGZzxplGN0Nbk2jKKjY1FRkaGudmpvLwc\nISEhaGxsxKuvvora2lqsXr1a0rYaGhpQVFQkZ1wiSb4qqUNGwVU03NRC5KMDZkX74U99OpmX/d+O\nCrT1C6cB8K9JtztsP+S6lPw/joyMNPcXi1H9aqiWpilvb29MmTIFs2fPtnkbtrzhmxUUFCA6Otrm\n18nNWXMBzGZNdDRwxx3Wr1JqydZzX57VObWlZBfbj634/2kfObPN3ZdnUSgAoMEI/OtME16Y2P4+\npeay5w9tVYtFXV0djEYjunbtCkEQkJOTg4iICDUjEdlNSqe5Iy7b5V3W7s1Z+6UUKxYrVqzA3r17\nceXKFUybNg0BAQHIyMjAnDlzYDQaYTKZ0LdvX6SkpCgViUhxCVGhyC+pwtYjpTAKAnQaDR6L5pc/\n/aZngK/Vs081KVYslixZgiVLlrRanpmZqVQEItVlFuqxs0AP469dhUZBwM4CPWL6BLJgEAD5bhq9\nVU5xNRSRp+DwHyQmISoUKycOQGiALzQAQgN8sXLiANX/mFC9g5vIkzhrezQ5F2fsl+KZBZGCeJ8E\nuSoWCyIFcTY6clVshiJSEGejI1fFYkGkMGdsjyYSw2JB5AY4xwXJjcWCyMVxjgtSAju4iVwc790g\nJbBYELk43rtBSmCxIHJxvHeDlMBiQeTieO8GKYEd3EQujvdukBJYLIjcAO/dILmxGYqIiESxWBAR\nkSgWCyIiEsViQUREolgsiIhIFIsFERGJYrEgIiJRLBZERCSKxYKIiESxWBARkSgWCyIiEsViQURE\nolgsiIhIFIsFERGJYrEgIiJRLBZERCSKkx8REakgs1Bv1+yG9r7uVrFYEBEpLLNQj4WfHYehyQgA\n0NcYsPCz4wDQ7he/va9zBDZDEREpLD33tPkLv4WhyYj03NOyvM4RFCkWaWlpiI2NRXh4OM6cOWNe\nXlxcjMcffxxxcXF4/PHHcf78eSXiEBGpqqzGYNPyW32dIyhSLEaPHo2PP/4YoaGWp0kpKSmYMmUK\ncnNzMWXKFCxdulSJOEREquoZ4GvT8lt9nSMoUixiYmIQEhJisayyshInT55EfHw8ACA+Ph4nT55E\nVVWVEpGIiFQzPy4cvl46i2W+XjrMjwuX5XWOoFoHd3l5OXr06AGd7sYb1+l0CA4ORnl5OQIDA9WK\nRUQku5bOaFuvarL3dY7gFldDFRUV2f3agoICByZxHGfNBTCbvZw1m7PmAtw7W28A68b4A/C/scBU\ngYKCilt+nVyfmWrFIiQkBJcuXYLRaIROp4PRaMTly5dbNVdJERkZCR8fH5tfV1BQgOjoaJtfJzdn\nzQUwm72cNZuz5gKYzR5SczU0NNj8R7Zql87edtttiIiIwO7duwEAu3fvRkREBJugiIickCJnFitW\nrMDevXtx5coVTJs2DQEBAcjOzkZqaiqSk5OxceNG+Pn5IS0tTYk4RERkI0WKxZIlS7BkyZJWy/v2\n7YsdO3YoEYGIiG6BS3dwC4IAAGhsbLR7Gw0NDY6K41DOmgtgNns5azZnzQUwmz2k5LLnO1MjtHzj\nuqBr165Z3BFORETS2XJxkEsXC5PJhNraWnh5eUGj0agdh4jIJbR87fv4+Ej+7nTpYkFERMrgqLNE\nRCSKxYKIiESxWBARkSgWCyIiEsViQUREolgsiIhIFIsFERGJcunhPsSkpaUhNzcXer0eWVlZ6N+/\nf6t11q9fj08++QTBwcEAgHvuuQcpKSmyZ6uursaCBQtw4cIFeHt7o0+fPli+fHmrUXcNBgMWLlyI\nEydOQKfTISkpCaNGjVI9V3JyMr7++mt069YNADB27FjMnj1btlwtnn32WVy8eBFarRadOnXCyy+/\njIiICIt1jEYjVqxYgYMHD0Kj0WDmzJmYNGmSU2RT63gDgLfeegvr169v83dB6ePMlmxqHWuxsbHw\n9vY23+GcmJiI4cOHW6yj1ucmJZvDPzfBjR09elQoKysTRo0aJZw+fbrNddatWyesWrVK4WSCUF1d\nLXzzzTfmx6tWrRIWLlzYar3169cLixcvFgRBEIqLi4U//vGPwvXr11XPlZSUJHz44Yey5bDm6tWr\n5p/37dsnJCQktFpn165dwtNPPy0YjUahsrJSGD58uFBaWuoU2dQ63oqKioTp06db/V1Q+jizJZta\nx1p73xst1PrcpGRz9Ofm1s1Qbc397SwCAgJw7733mh8PHjwYZWVlrdbbs2cPHn/8cQBAWFgYIiMj\n8dVXX6meSy1du3Y1/3z9+vU2hyrIycnBpEmToNVqERgYiAcffBBffPGFU2RTQ2NjI5YvX47U1FSr\n6yh9nNmSzZmp9bmpwa2boaTKzs7GoUOHEBQUhDlz5iAqKkrR/ZtMJmzduhWxsbGtnisrK0No6G/z\n64aEhKCiQnzqRblzAcCWLVvw6aefonfv3njppZfQt29fRXItXrwYhw8fhiAIePfdd1s9X15ejp49\ne5ofK/mZiWUDlD/e3nzzTYwfPx69evWyuo5ax5mUbIB6x1piYiIEQUB0dDRefPFF+Pn5WTyv5u+n\nWDbAwZ+bw85RnFh7p2yXL18WGhsbBUEQhEOHDgn33XefUFVVpWQ8ITU1VZg9e7ZgNBpbPTd48GCh\nsrLS/DglJUV4//33Vc9VUVFhXr5r1y5h5MiRQnNzsyK5WuzatUuYMWNGq+Xx8fHC999/b368efNm\n4ZVXXlEymtVsSh9v3333nfDkk08KJpNJEATrvwtqHGdSs6l1rJWVlQmCIAgNDQ3C0qVLhZdeeqnV\nOmr9fkrJ5ujPza2boaQICgqCl5cXAOCBBx5ASEgIzp49q9j+09LSUFJSgjfeeANabev/jp49e0Kv\n15sfl5eX4/bbb1c9V48ePczLExISUFdXp9hfVC0SEhJw5MgRVFdXWywPCQmxaDpT6jOTkk3p4+3o\n0aM4d+4cRo8ejdjYWFRUVGD69Ok4dOiQxXpqHGdSs6l1rLU0YXt7e2PKlCn47rvvWq2j1u+nlGyO\n/tw8vlhcunTJ/POpU6eg1+txxx13KLLvNWvWoKioCBs2bIC3t3eb64wdOxaffvopAOD8+fM4fvx4\nq6se1Mh18+d28OBBaLVa9OjRQ9ZctbW1KC8vNz/Oy8uDv78/AgICLNYbO3YsduzYAZPJhKqqKuzf\nvx9xcXFOkU3p423mzJk4dOgQ8vLykJeXh9tvvx3vvfcehg0bZrGeGseZ1GxqHGt1dXW4du0agBvD\neefk5LS6sg1Q53OTms3Rn5vrm03aAAAEUUlEQVRb91lYm/v7mWeewdy5czFgwACsWbMGJ06cgFar\nhZeXF15//XUEBQXJnu3s2bPYtGkTwsLCMHnyZABAr169sGHDBkyYMAGbN29Gjx49MH36dCQnJ2PM\nmDHQarVYvnw5unTponqupKQkVFZWQqPRoEuXLnj77bfRoYO8h5PBYMC8efNgMBig1Wrh7++PjIwM\naDQai//TCRMm4Pvvv8dDDz0EAHjuuefQu3dvp8im1vHWFjWPM1uyqXGsVVZWYs6cOTAajTCZTOjb\nt6/5Eme1Pzep2Rz9uXE+CyIiEuXxzVBERCSOxYKIiESxWBARkSgWCyIiEsViQUREolgsiBxo6dKl\n2LBhg6R1k5OTsXbtWpkTETmGW99nQaS05cuXO2xb4eHh2Lt3L/r06eOwbRLZi2cWREQkisWC6Fc7\nd+7ErFmzzI8feughzJ071/x4xIgROHXqFM6dO4dp06Zh6NChiIuLQ05Ojnmd/21aeueddzBs2DAM\nGzYMO3bsQHh4OEpKSszPX716FTNnzkRUVBQmTZqECxcuAACmTp0K4MYduVFRURb7IFIDiwXRr4YO\nHYr8/HyYTCZcunQJTU1NOHbsGACgtLQUdXV16NOnD55++mnEx8fj66+/xtq1a7Fs2TL89NNPrbb3\n1Vdf4R//+Ae2bNmCffv24ciRI63WycnJwfPPP4+jR4/id7/7nbnQfPzxxwCAf//73ygsLMQjjzwi\n4zsnEsdiQfSr3r17o3Pnzjh16hTy8/MxbNgwBAcH49y5c/j2228RHR2NAwcOIDQ0FI899hg6dOiA\nu+++G3FxcW1OrrRnzx5MnDgR/fr1g6+vL+bMmdNqnQcffBADBw5Ehw4dMH78eJw6dUqJt0pkM3Zw\nE91kyJAh+Pbbb1FSUoIhQ4aga9euOHr0KI4dO4ahQ4dCr9fjhx9+QExMjPk1RqMR48ePb7Wty5cv\nIzIy0vy4rVkbu3fvbv65Y8eOqKurc/A7InIMFguimwwdOhR5eXnQ6/WYNWsW/Pz8kJWVhcLCQkyd\nOtVcRLZs2SK6reDgYIthom8ewpzI1bAZiugmQ4YMwZEjR1BfX4/bb78dMTExOHjwIGpqanD33Xdj\n5MiROH/+PDIzM9HU1ISmpib88MMPOHfuXKttjR07Fp999hnOnTsHg8GAjRs32pSle/fuKC0tddRb\nI7olLBZEN7njjjvQuXNnczNTly5d0KtXL9xzzz3Q6XTo0qUL3nvvPeTk5GD48OEYNmwYVq9ejcbG\nxlbbGjFiBJ544gk8+eSTGDNmDAYNGgQAVieU+l/PP/88kpOTERMTw6uhSHWcz4JIIefOnUN8fDyO\nHz8u++Q9RI7GMwsiGe3btw+NjY345ZdfkJ6ejlGjRrFQkEtisSCS0bZt23D//fdjzJgx0Ol0SE1N\nVTsSkV3YDEVERKJ4ZkFERKJYLIiISBSLBRERiWKxICIiUSwWREQkisWCiIhE/T+sQFcPrMAVPAAA\nAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xy0HMP-oqHqD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "?plt.plot?"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uUlFCfavqRGs",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "ea17a19d-ed90-4499-aabb-dcd7f42605ce"
      },
      "source": [
        "plt.plot(dfcars.wt, dfcars.mpg, 'o');\n",
        "plt.xlabel(\"weight\");\n",
        "plt.ylabel(\"miles per gallon\");"
      ],
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SLVzxnMgqZrZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "d92153d5-8c79-42e0-fa4c-2bce3959f03c"
      },
      "source": [
        "plt.plot(dfcars.wt,dfcars.mpg,'ko')\n",
        "plt.xlabel('Weight')\n",
        "plt.ylabel(\"miler per Gallon\")\n",
        "plt.show()"
      ],
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "15akGpypqtTG",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 631
        },
        "outputId": "7fabe985-0b8d-429a-941f-22f38b2fc97f"
      },
      "source": [
        "plt.plot(dfcars.wt, dfcars.mpg, 'o')\n",
        "plt.xlabel(\"weight\");\n",
        "plt.ylabel(\"miles per gallon\");\n",
        "plt.savefig('images/foo1.pdf')\n",
        "plt.savefig('images/foo2.png', bbox_inches='tight') #"
      ],
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "error",
          "ename": "FileNotFoundError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-99-c0e649cef419>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"weight\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"miles per gallon\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msavefig\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'images/foo1.pdf'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msavefig\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'images/foo2.png'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbbox_inches\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'tight'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36msavefig\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    687\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0msavefig\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    688\u001b[0m     \u001b[0mfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgcf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 689\u001b[0;31m     \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msavefig\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    690\u001b[0m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdraw_idle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m   \u001b[0;31m# need this if 'transparent=True' to reset colors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    691\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/matplotlib/figure.py\u001b[0m in \u001b[0;36msavefig\u001b[0;34m(self, fname, frameon, transparent, **kwargs)\u001b[0m\n\u001b[1;32m   2092\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_frameon\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mframeon\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2093\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2094\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2095\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2096\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mframeon\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m   2073\u001b[0m                     \u001b[0morientation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morientation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2074\u001b[0m                     \u001b[0mbbox_inches_restore\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_bbox_inches_restore\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2075\u001b[0;31m                     **kwargs)\n\u001b[0m\u001b[1;32m   2076\u001b[0m             \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2077\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mbbox_inches\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mrestore_bbox\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/matplotlib/backends/backend_pdf.py\u001b[0m in \u001b[0;36mprint_pdf\u001b[0;34m(self, filename, dpi, bbox_inches_restore, metadata, **kwargs)\u001b[0m\n\u001b[1;32m   2556\u001b[0m             \u001b[0mfile\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2557\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2558\u001b[0;31m             \u001b[0mfile\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPdfFile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2559\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2560\u001b[0m             \u001b[0mfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnewPage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwidth\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/matplotlib/backends/backend_pdf.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, filename, metadata)\u001b[0m\n\u001b[1;32m    431\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moriginal_file_like\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    432\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtell_base\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 433\u001b[0;31m         \u001b[0mfh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopened\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_filehandle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"wb\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_opened\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    434\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mopened\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    435\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/matplotlib/cbook/__init__.py\u001b[0m in \u001b[0;36mto_filehandle\u001b[0;34m(fname, flag, return_opened, encoding)\u001b[0m\n\u001b[1;32m    390\u001b[0m             \u001b[0mfh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbz2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mBZ2File\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflag\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    391\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 392\u001b[0;31m             \u001b[0mfh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflag\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    393\u001b[0m         \u001b[0mopened\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    394\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'seek'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'images/foo1.pdf'"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nvnP9ahkq1sw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "e83d46ea-e27f-4130-bdf0-6eef2664997e"
      },
      "source": [
        "plt.plot(dfcars.wt, dfcars.mpg, 'o-')  \n",
        "plt.xlabel(\"weight\");\n",
        "plt.ylabel(\"miles per gallon\");\n",
        "plt.show()"
      ],
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q2Jb6Ju8q_LF",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "e8f6cbc9-c9db-4e4a-85fc-78b1eb5d6da5"
      },
      "source": [
        "sub_dfcars = dfcars[['wt', 'mpg']]\n",
        "df_temp = sub_dfcars.sort_values('wt')\n",
        "plt.plot(df_temp.wt, df_temp.mpg, 'o-');\n",
        "plt.xlabel(\"weight\");\n",
        "plt.ylabel(\"miles per gallon\");\n",
        "plt.show()"
      ],
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7z-5gIOBrIzg",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}